<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
	">

    <!-- Scan for property file -->
    <context:property-placeholder location="classpath:META-INF/spring/config/resources.properties" />

    <bean id="report" class="org.slevin.common.Account" scope="prototype" />
    <bean id="itemProcessor" class="org.slevin.batch.processor.AccountItemProcessor" />

       <batch:job id="fromCsvToXmlAndCsvToXmlJob">
           <batch:step id="step1" next="step2">
               <batch:tasklet>
                   <batch:chunk reader="cvsFileItemReader" writer="xmlItemWriter"
                                processor="itemProcessor" commit-interval="10">
                   </batch:chunk>
               </batch:tasklet>
           </batch:step>
           <batch:step id="step2">
               <batch:tasklet>
                   <batch:chunk reader="xmlItemReader"
                                writer="cvsFileItemWriter" processor="itemProcessor"
                                commit-interval="10">
                   </batch:chunk>
               </batch:tasklet>
           </batch:step>
       </batch:job>

       <bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">

           <property name="resource" value="classpath:csv/report.csv" />

           <property name="lineMapper">
               <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                   <property name="lineTokenizer">
                       <bean
                               class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                           <property name="names" value="username,password,email,enabled" />
                       </bean>
                   </property>
                   <property name="fieldSetMapper">
                       <bean class="org.slevin.batch.mapper.AccountFieldSetMapper" />

                       <!-- if no data type conversion, use BeanWrapperFieldSetMapper to map by name
                      <bean
                          class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                          <property name="prototypeBeanName" value="report" />
                      </bean>
                       -->
                </property>
            </bean>
        </property>

    </bean>

    <bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
        <property name="resource" value="file:export/ssp-batch/xml/reportAccounts.xml" />
        <property name="marshaller" ref="reportMarshaller" />
        <property name="rootTagName" value="account" />
    </bean>

    <bean id="reportMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound">
            <list>
                <value>org.slevin.common.Account</value>
            </list>
        </property>
    </bean>




    <!-- Read from xml -->

    <bean id="xmlItemReader"
          class="org.springframework.batch.item.xml.StaxEventItemReader">
        <property name="fragmentRootElementName" value="account" />
        <property name="resource" value="classpath:xml/report.xml" />
        <property name="unmarshaller" ref="reportUnmarshaller" />
    </bean>

    <!-- Read and map values to object, via jaxb2 -->
    <bean id="reportUnmarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound">
            <list>
                <value>org.slevin.common.Account</value>
            </list>
        </property>
    </bean>

    <bean id="cvsFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
        <!-- write to this csv file -->
        <property name="resource" value="file:export/ssp-batch/csv/reportAccounts.csv" />
        <property name="shouldDeleteIfExists" value="true" />

        <property name="lineAggregator">
            <bean
                    class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
                <property name="delimiter" value="," />
                <property name="fieldExtractor">
                    <bean
                            class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
                        <property name="names" value="username,password,email,enabled" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>


   </beans>