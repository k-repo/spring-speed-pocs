<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/jdbc
		http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
	">


    <import resource="classpath:META-INF/spring/config/database.xml" />
    <import resource="classpath:META-INF/spring/applicationContext-db.xml" />

    <bean id="report" class="org.slevin.common.Account" scope="prototype" />
    <bean id="itemProcessor" class="org.slevin.batch.processor.AccountItemProcessor" />

    <batch:job id="helloWorldJob">
        <batch:step id="step1">
            <batch:tasklet>
                <batch:chunk reader="cvsFileItemReader" writer="xmlItemWriter"
                             processor="itemProcessor" commit-interval="10">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>

    <bean id="cvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">

        <property name="resource" value="classpath:csv/report.csv" />

        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean
                            class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="username,password,email,enabled" />
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="org.slevin.batch.mapper.AccountFieldSetMapper" />

                    <!-- if no data type conversion, use BeanWrapperFieldSetMapper to map by name
                   <bean
                       class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                       <property name="prototypeBeanName" value="report" />
                   </bean>
                    -->
                </property>
            </bean>
        </property>

    </bean>

    <bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
        <property name="resource" value="file:xml/outputs/report.xml" />
        <property name="marshaller" ref="reportMarshaller" />
        <property name="rootTagName" value="account" />
    </bean>

    <bean id="reportMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound">
            <list>
                <value>org.slevin.common.Account</value>
            </list>
        </property>
    </bean>

    <!-- stored job-meta in database -->
    <bean id="jobRepository"
          class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="databaseType" value="HSQL" />
        <property name="isolationLevelForCreate" value="ISOLATION_DEFAULT"/>
    </bean>
    <!--
       <bean id="transactionManager"
             class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />
   -->

    <bean id="jobLauncher"
          class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
    </bean>


   </beans>