<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:batch="http://www.springframework.org/schema/batch" xmlns:task="http://www.springframework.org/schema/task"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/util 
		http://www.springframework.org/schema/util/spring-util-3.2.xsd">


    <bean id="itemProcessor" class="org.slevin.batch.processor.ReportItemProcessor" />

    <batch:job id="reportJob">
        <batch:step id="step1" next="step2">
            <batch:tasklet>
                <batch:chunk reader="xmlItemReader" writer="mongodbItemWriter"
                             commit-interval="1">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
        <batch:step id="step2">
            <batch:tasklet>
                <batch:chunk reader="mongoItemReader" writer="xmlItemWriter"
                             processor="itemProcessor"
                             commit-interval="1">
                </batch:chunk>
            </batch:tasklet>
        </batch:step>
    </batch:job>


    <!-- read from xml and write on mongodb -->

    <bean id="mongodbItemWriter" class="org.springframework.batch.item.data.MongoItemWriter">
        <property name="template" ref="mongoTemplate"/>
        <property name="collection" value="report"/>
    </bean>

    <bean id="xmlItemReader" class="org.springframework.batch.item.xml.StaxEventItemReader">
        <property name="fragmentRootElementName" value="record"/>
        <property name="resource" value="classpath:xml/report.xml"/>
        <property name="unmarshaller" ref="reportUnmarshaller"/>
    </bean>

    <bean id="reportUnmarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">

        <property name="aliases">
            <util:map id="aliases">
                <entry key="record" value="org.slevin.batch.model.Report"/>

                <!--
                <entry key="date" value="java.lang.String" />
                <entry key="impression" value="java.lang.Long" />
                <entry key="clicks" value="java.lang.Integer" />
                <entry key="earning" value="java.math.BigDecimal" />
                 -->
            </util:map>
        </property>

        <property name="converters">
            <array>
                <ref bean="reportConverter"/>
            </array>
        </property>

    </bean>

    <bean id="reportConverter" class="org.slevin.batch.converter.ReportConverter"/>


    <!-- read from mongodb and write on xml -->

    <bean id="mongoItemReader" class="org.springframework.batch.item.data.MongoItemReader"
          scope="step">
        <property name="template" ref="mongoTemplate"/>
        <property name="targetType" value="org.slevin.batch.model.Report"/>
        <property name="query" value="{}" />
        <property name="sort">
            <util:map id="sort">
                <entry key="id" value=""/>
            </util:map>
        </property>
    </bean>

    <bean id="xmlItemWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter">
        <property name="resource" value="file:xml/outputs/report-mongodb.xml"/>
        <property name="marshaller" ref="reportMarshaller"/>
        <property name="rootTagName" value="report-mongo"/>
    </bean>

    <bean id="reportMarshaller" class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
        <property name="classesToBeBound">
            <list>
                <value>org.slevin.batch.model.Report</value>
            </list>
        </property>
    </bean>


    <!-- stored job-meta in database
    <bean id="jobRepository"
         class="org.springframework.batch.core.repository.support.JobRepositoryFactoryBean">
       <property name="dataSource" ref="dataSource" />
       <property name="transactionManager" ref="transactionManager" />
       <property name="databaseType" value="HSQL" />
       <property name="isolationLevelForCreate" value="ISOLATION_DEFAULT"/>
    </bean>
    -->

</beans>
